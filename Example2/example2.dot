digraph G {
   node [style=filled,  color="#D5E8D4", fontsize=30];
   edge [penwidth = 15, arrowsize=0.1, fontsize=20, color="#9675A6"]
   compound=true;
   fontsize=35;
   labeljust=l;
   color="red";

 #CreateSocket
  subgraph cluster_0 {
    #style=filled;
    #color=lightgrey;
    label = "CreateSocket";
    
    #CheckProtocolRange
    subgraph cluster_0_1 {
        label="CheckProtocolRange";
        
        decision0 [label="family < 0 || family >= NPROTO", shape=diamond, color="#FFF2CC"]
        decision1 [label="type < 0 || type >= SOCK_MAX", shape=diamond, color="#FFF2CC"]
        
        decision0 -> decision1 [label="False", style=dotted, penwidth = 5, color=black, arrowsize=1];
        
        point0 [shape="point",color=white,width=0.5];
        decision1 -> point0 [label="False", style=dotted, penwidth = 5, color=black, arrowsize=1];
    }
    #end CheckProtocolRange
    
    a0 [label="CreateTheSocket", shape=box ]
    a1 [label="MapSocketToFileDescriptor", shape=box ]
    point0 -> a0 [label="SocketSpec", ltail="cluster_0_1"];
    a0 -> a1 [label="Socket"];
  }
 #end CreateSocket
  

 subgraph cluster_1 {
    #style=filled;
    #color=lightgrey;
    label = "ConfigureSocket";
    
    point1 [shape=point,width=0.5]
     
    #VerifySocketPermission
    subgraph cluster_1_1 {
 
        label="VerifySocketPermission*";
        
        point1 -> b0 [label=" SocketAndOptionIdentifier"]
        b0 [label="ComputeSocketSecurity*", shape=box ]
        decision2 [label="ret ==0", shape=diamond, color="#FFF2CC"]
        
        b0 -> decision2 [label="ret (dynamic pointer output)", fontcolor=red];
        
    }
    #end VerifySocketPermission
    
    decision3 [label="level == SOL_SOCKET", shape=diamond, color="#FFF2CC"];
    decision2 -> decision3 [label="True", style=dotted, penwidth = 5, color=black, arrowsize=1];
     
    b1 [shape=box, label="ConfigureProtocolSpecificParameters"]
    
    decision3 -> b1 [label="False", style=dotted, penwidth = 5, color=black, arrowsize=1];
    decision3 -> b2 [label="True", style=dotted, lhead="cluster_1_3", penwidth = 5, color=black, arrowsize=1];
    
    decision4 [label="level == SOL_IP", shape=diamond, color="#FFF2CC"];
    
 
    
    #ReplaceNetworkFirewallRules
    subgraph cluster_1_2 {
        label="ReplaceNetworkFirewallRules";
        
        b4 [shape=box, label="CopyDataFromUser"];
        b4->b6 [label="SocketIPtableRule",lhead="cluster_1_2_1"];
        
        #ValidateNewNetworkFirewallRule
         subgraph cluster_1_2_1 {
            label="ValidateNewNetworkFirewallRule";
            
            b6 [shape=box, label="CheckIptableEntrySizeAndHook"]
            b7 [shape=box, label="IptableEntryHooksSourceOfRules"]
            b8 [shape=box, label="CheckNewIptableEntryMatchesAndTarget"];
            
            b6->b7 [label="SocketIptableRule"];
            b7->b8 [label="SocketIptableRule"];
         }
        #end ValidateNewNetworkFirewallRule
        
        b8->b9 [label="SocketNetworkFirewallRules"];
        b9 [shape=box, label="SaveAndFreeNetworkResources"];
    }
    #end ReplaceNetworkFirewallRules
    
    # ConfigureGenericSocketParameters
    subgraph cluster_1_3 {
        label="ConfigureGenericSocketParameters";
        
        b2 [shape=box, label="ConfigureSocketOptionWithoutArguments"];
        b10 [shape=box, label="GetUserData"];
        b11 [shape=box, label="SetOResetSocketFlag"];
        b12 [shape=box, label="UpdateOtherSocketElements"];
        
        decision5 [label="optname == SO_BINDTODEVICE", shape=diamond, color="#FFF2CC"];
        decision6 [label="optlen < sizeof(int)", shape=diamond, color="#FFF2CC"];
        decision7 [label="switch (optname)", shape=diamond, color="#FFF2CC"];
        
        decision5 -> b2 [label="True", style=dotted, penwidth = 5, color=black, arrowsize=1];
        decision5 -> decision6 [label="False", style=dotted, penwidth = 5, color=black, arrowsize=1];
        
        decision6 -> b10 [label="False", style=dotted, penwidth = 5, color=black, arrowsize=1];
        b10 -> decision7 [label="SocketOptionValue"];
        b10 -> b11 [label="SocketOptionValue"];
        b10 -> b12 [label="SocketOptionValue"];
        
        decision7 -> b11  [label="SO_DEBUG,SO_KEEPALIVE,...", style=dotted, penwidth = 5, color=black, arrowsize=1];
        decision7 -> b12  [label="SO_REUSEADDR, SO_REUSEPORT, ...  ", style=dotted, penwidth = 5, color=black, arrowsize=1];
        
        point3 [shape=point, width=0.5]
        
        b11 -> point3 [label="Socket"];
        b12 -> point3 [label="Socket"];
        b2 -> point3 [label="Socket"];
        
    }
    #end ConfigureGenericSocketParameters
    
     subgraph cluster_1_4 {
        label="ConfigureIPSocketLevel";
        
        point4 [shape=point, width=0.5];
        b5 [shape=box, label="CopyDataFromUser"];
        decision8 [label="optname >= MRT_BASE \n&& optname <= MRT_MAX", shape=diamond, color="#FFF2CC"];
        b13 [shape=box, label="ConfigureVirtualSockOption"];
        b14 [shape=box, label="LockSocket"];
        b15 [shape=box, label="ModifySocketElements"];
        b16 [shape=box, label="ReleaseSocket"];
        point5 [shape=point, width=0.5];
        
        point4 -> b5 [label="SocketOption", ltail=cluster_1_4];
        b5 -> decision8 [label="SocketOption"]
        decision8 -> b13 [label="True", style=dotted, penwidth = 5, color=black, arrowsize=1];
        decision8 -> b14 [label="False", style=dotted, penwidth = 5, color=black, arrowsize=1];
        point4 -> b13 [label="Socket"];
        point4 -> b14 [label="Socket"];
        
        b14 -> b15 [label="Socket"];
        b15 -> b16 [label="Socket"];
        b13 -> point5 [label="Socket"];
        b16 -> point5 [label="Socket"];
     }
    
    b1 -> decision4 [label="SocketOptionLevel"];
    b1 -> point4 [label="SocketNetworkLayerAndSocketOption"];
    b1 -> b4 [label="SocketNetworkLayerAndSocketOption", lhead="cluster_1_2"];
    point1 -> b1 [label="SocketAndSocketOption"];
    
    point1 -> decision5 [label="SocketAndSocketOption", ltail=cluster_1_1, lhead="cluster_1_3"];
    
    decision4 -> point4 [label="True", style=dotted, penwidth = 5, color=black, arrowsize=1];
    decision4 -> b4 [label="False", style=dotted, penwidth = 5, color=black, arrowsize=1];
    
  }
  
  user -> decision0 [label="SocketSpec(family, type, protocol)", lhead=cluster_0_1];

  a1->point1 [label="Socket", lhead=cluster_1_1];
  user -> point1 [label="SocketOption(level, optname, optval, optlen)"];
 
 

  user [style= filled, color="#F8CECC"];
  end [style= filled, color="#F8CECC"];
  exit1 [style= filled, color="#F8CECC",label="-EAFNOSUPPORT"];
  exit2 [style= filled, color="#F8CECC",label="-EINVAL"];
  exit5 [style= filled, color="#F8CECC",label="-ENOPROTOOPT"];
  
  
  decision0 -> exit1 [label="True", style=dotted, penwidth = 5, color=black, arrowsize=1];
  decision1 -> exit2 [label="True", style=dotted, penwidth = 5, color=black, arrowsize=1];
  decision6 -> exit2 [label="True", style=dotted, penwidth = 5, color=black, arrowsize=1];
  decision7 -> exit5 [label="DEFAULT", style=dotted, penwidth = 5, color=black, arrowsize=1];
  
  point5 -> end [label="Socket"];
  b9 -> end [label=" SocketNetworkfirewallRules"];
  decision2 -> end [label="False", style=dotted, penwidth = 5, color=black, arrowsize=1];
  point3 -> end [label="Socket"];
  
}